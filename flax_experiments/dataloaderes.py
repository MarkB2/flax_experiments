# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01_dataloaders.ipynb (unless otherwise specified).

__all__ = ['get_config', 'get_dataloader']

# Cell
#export
from fastai.vision.all import *

from omegaconf import DictConfig, OmegaConf
from hydra import initialize_config_module, compose
from hydra.utils import instantiate, call

# Cell
def get_config(config_module: str=None, config_name: str='config'):
    # hack to check if `initialize` was called
    import flax_experiments.config as config
    from hydra.core.global_hydra import GlobalHydra
    if not GlobalHydra.instance().is_initialized():
        cfg_module = config_module or config.__name__
        initialize_config_module(config_module=cfg_module, version_base=None)
    return compose(config_name)

# Cell
def get_dataloader(cfg: DictConfig):
    path = untar_data(getattr(URLs,cfg.name))
    item_tmfs = instantiate(cfg.item_tfms)
    batch_tmfs = call(cfg.batch_tfms)
    dls = ImageDataLoaders.from_folder(
        path, valid=cfg.valid_name,
        item_tfms=item_tmfs,
        batch_tfms=batch_tmfs)
    return dls
